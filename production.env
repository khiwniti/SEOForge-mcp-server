# Production Environment Configuration for Universal MCP Platform
# This file contains production-ready environment variables
# Copy these to your Vercel project environment variables

# =============================================================================
# CRITICAL: API KEYS (Required for production)
# =============================================================================
# Get these from respective providers:
# OpenAI: https://platform.openai.com/api-keys
# Anthropic: https://console.anthropic.com/
# Google AI: https://makersuite.google.com/app/apikey

OPENAI_API_KEY=sk-your-production-openai-api-key-here
ANTHROPIC_API_KEY=your-production-anthropic-api-key-here
GOOGLE_AI_API_KEY=your-production-google-ai-api-key-here

# =============================================================================
# MCP SERVER CONFIGURATION (Production)
# =============================================================================
MCP_API_KEY=your-super-secure-production-mcp-api-key-here
JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters-long
ALLOWED_ORIGINS=https://your-domain.vercel.app,https://www.your-domain.com

# =============================================================================
# DATABASE CONFIGURATION (Production)
# =============================================================================
# Option 1: Vercel Postgres (Recommended)
# These will be auto-populated when you create a Vercel Postgres database
POSTGRES_URL=postgres://username:password@host:port/database?sslmode=require
POSTGRES_PRISMA_URL=postgres://username:password@host:port/database?sslmode=require&pgbouncer=true&connect_timeout=15
POSTGRES_URL_NON_POOLING=postgres://username:password@host:port/database?sslmode=require

# Option 2: External Database
DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# =============================================================================
# REDIS CONFIGURATION (Production)
# =============================================================================
# Option 1: Upstash Redis (Recommended for Vercel)
REDIS_URL=rediss://username:password@host:port

# Option 2: External Redis
# REDIS_URL=redis://username:password@host:port
REDIS_PASSWORD=your-secure-redis-password

# =============================================================================
# APPLICATION CONFIGURATION (Production)
# =============================================================================
ENVIRONMENT=production
NODE_ENV=production
VERCEL=1
VERCEL_ENV=production

# CORS Configuration
CORS_ORIGINS=https://your-domain.vercel.app,https://www.your-domain.com,https://your-wordpress-site.com

# API URLs (Auto-configured for Vercel)
REACT_APP_API_URL=https://your-domain.vercel.app/api
REACT_APP_MCP_SERVER_URL=https://your-domain.vercel.app/api

# =============================================================================
# PERFORMANCE & SCALING (Production)
# =============================================================================
# Rate limiting (requests per hour per user)
RATE_LIMIT=1000

# Cache settings (in seconds)
CACHE_DURATION=3600

# Request timeout (in seconds)
REQUEST_TIMEOUT=30

# Worker processes for backend
WORKER_PROCESSES=4

# Database connection pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# =============================================================================
# SECURITY SETTINGS (Production)
# =============================================================================
# Debug mode (MUST be false in production)
DEBUG_MODE=false

# SSL settings
SSL_ENABLED=true
FORCE_HTTPS=true

# Security headers
ENABLE_SECURITY_HEADERS=true
ENABLE_RATE_LIMITING=true
ENABLE_CORS_PROTECTION=true

# Session security
SESSION_SECURE=true
SESSION_SAME_SITE=strict

# =============================================================================
# MONITORING & ANALYTICS (Production)
# =============================================================================
# Enable monitoring features
ENABLE_ANALYTICS=true
ENABLE_MONITORING=true
ENABLE_ERROR_TRACKING=true
ENABLE_PERFORMANCE_MONITORING=true

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_REQUEST_LOGGING=true

# =============================================================================
# FEATURE FLAGS (Production)
# =============================================================================
ENABLE_CACHING=true
ENABLE_COMPRESSION=true
ENABLE_CDN=true
ENABLE_WEBSOCKETS=false

# Content generation limits
MAX_CONTENT_LENGTH=10000
MAX_KEYWORDS_PER_REQUEST=50
MAX_REQUESTS_PER_MINUTE=60

# =============================================================================
# EXTERNAL INTEGRATIONS (Optional)
# =============================================================================
# SEO Tools (Optional - for enhanced functionality)
SEMRUSH_API_KEY=your-semrush-api-key
AHREFS_API_KEY=your-ahrefs-api-key
MOZ_API_KEY=your-moz-api-key

# Social Media APIs (Optional)
TWITTER_API_KEY=your-twitter-api-key
FACEBOOK_API_KEY=your-facebook-api-key

# Email service (Optional - for notifications)
SENDGRID_API_KEY=your-sendgrid-api-key
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password

# =============================================================================
# BACKUP & MAINTENANCE (Production)
# =============================================================================
# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_URL=your-backup-storage-url

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=Platform is under maintenance. Please try again later.

# =============================================================================
# WORDPRESS INTEGRATION (Production)
# =============================================================================
# Default WordPress configuration for plugin
WP_DEFAULT_INDUSTRY=general
WP_DEFAULT_LANGUAGE=en
WP_CACHE_ENABLED=true
WP_RATE_LIMIT=100

# WordPress multisite support
WP_MULTISITE_ENABLED=false
WP_NETWORK_ADMIN_ONLY=false

# =============================================================================
# INDUSTRY-SPECIFIC SETTINGS (Production)
# =============================================================================
# Supported industries (comma-separated)
SUPPORTED_INDUSTRIES=ecommerce,healthcare,finance,technology,education,cannabis,real_estate,automotive,food_beverage,travel,general

# Default industry templates
DEFAULT_TEMPLATES_ENABLED=true
CUSTOM_TEMPLATES_ENABLED=true

# Content moderation
CONTENT_MODERATION_ENABLED=true
CONTENT_FILTER_LEVEL=moderate

# =============================================================================
# COMPLIANCE & LEGAL (Production)
# =============================================================================
# Data privacy
GDPR_COMPLIANCE=true
CCPA_COMPLIANCE=true
DATA_RETENTION_DAYS=365

# Content compliance
CONTENT_COMPLIANCE_CHECK=true
INDUSTRY_COMPLIANCE_RULES=true

# Terms and privacy
TERMS_OF_SERVICE_URL=https://your-domain.com/terms
PRIVACY_POLICY_URL=https://your-domain.com/privacy

# =============================================================================
# DEPLOYMENT METADATA (Auto-populated by Vercel)
# =============================================================================
# These are automatically set by Vercel - do not modify
# VERCEL_URL=your-deployment-url.vercel.app
# VERCEL_GIT_COMMIT_SHA=commit-hash
# VERCEL_GIT_COMMIT_MESSAGE=commit-message
# VERCEL_GIT_COMMIT_AUTHOR_NAME=author-name
# VERCEL_GIT_REPO_SLUG=repository-name
# VERCEL_GIT_REPO_OWNER=repository-owner

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================
# 1. Replace all placeholder values with actual production values
# 2. Use strong, unique passwords and API keys
# 3. Enable all security features
# 4. Set up monitoring and alerting
# 5. Configure backup and disaster recovery
# 6. Test all functionality in staging environment first
# 7. Set up SSL certificates and custom domain
# 8. Configure CDN for static assets
# 9. Set up database read replicas for scaling
# 10. Implement proper logging and error tracking
